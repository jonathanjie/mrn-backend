# Generated by Django 4.1.1 on 2023-01-05 11:50

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ("marinanet", "0008_bdndata"),
    ]

    operations = [
        migrations.CreateModel(
            name="VoyageLegData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("modified_at", models.DateTimeField(auto_now=True)),
                (
                    "last_report_type",
                    models.CharField(
                        choices=[
                            ("NOON", "Noon at Sea"),
                            ("DSBY", "Departure: Standby"),
                            ("DCSP", "Departure: COSP"),
                            ("ASBY", "Arrival: Standby"),
                            ("AFWE", "Arrival: FWE"),
                            ("BDN", "Bunker Delivery Note"),
                            ("EVHB", "Event in Harbour"),
                            ("EVPO", "Event in Port"),
                            ("NNHB", "Noon in Harbour"),
                            ("NNPO", "Noon in Port"),
                        ],
                        max_length=4,
                        null=True,
                    ),
                ),
                ("last_report_date", models.DateTimeField(null=True)),
                ("departure_port", models.CharField(max_length=6, null=True)),
                ("departure_date", models.DateTimeField(null=True)),
                ("departure_tz", models.FloatField(null=True)),
                ("arrival_port", models.CharField(max_length=6, null=True)),
                ("arrival_date", models.DateTimeField(null=True)),
                ("arrival_tz", models.FloatField(null=True)),
                (
                    "displacement_at_departure",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=7,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0"))
                        ],
                    ),
                ),
                (
                    "load_condition",
                    models.CharField(
                        choices=[
                            ("BALLAST", "Ballast"),
                            ("LADEN", "Laden"),
                            ("EASTBOUND", "Eastbound"),
                            ("WESTBOUND", "Westbound"),
                        ],
                        max_length=16,
                        null=True,
                    ),
                ),
                (
                    "propeller_pitch",
                    models.DecimalField(decimal_places=1, max_digits=3, null=True),
                ),
                (
                    "total_hours",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0"))
                        ],
                    ),
                ),
                (
                    "distance_observed_total",
                    models.DecimalField(
                        decimal_places=0,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0"))
                        ],
                    ),
                ),
                (
                    "distance_engine_total",
                    models.DecimalField(
                        decimal_places=0,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0"))
                        ],
                    ),
                ),
                (
                    "revolution_count",
                    models.IntegerField(
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "distance_to_go",
                    models.DecimalField(
                        decimal_places=0,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0"))
                        ],
                    ),
                ),
                (
                    "speed_average",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0"))
                        ],
                    ),
                ),
                (
                    "rpm_average",
                    models.DecimalField(
                        decimal_places=1,
                        max_digits=4,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0"))
                        ],
                    ),
                ),
                (
                    "slip_average",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=4,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.0"))
                        ],
                    ),
                ),
                ("fuel_oil_data", models.JSONField(null=True)),
                ("lube_oil_data", models.JSONField(null=True)),
                ("freshwater_data", models.JSONField(null=True)),
                ("plannedoperations", models.JSONField(null=True)),
                (
                    "parking_status",
                    models.CharField(
                        choices=[
                            (
                                "ANCHOR_START_OUTSIDE",
                                "Anchoring Start (Outside Port Limit)",
                            ),
                            (
                                "ANCHOR_END_OUTSIDE",
                                "Anchoring End (Outside Port Limit)",
                            ),
                            (
                                "ANCHOR_START_INSIDE",
                                "Anchoring Start (Inside Port Limit) ",
                            ),
                            ("ANCHOR_END_INSIDE", "Anchoring End (Inside Port Limit)"),
                            ("DRIFTING_START", "Drifting Start"),
                            ("DRIFTING_END", "Drifting End"),
                            ("SHIFTING_START", "Shifting Start"),
                            ("SHIFTING_END", "Shifting End"),
                            ("BERTHING", "Berthing"),
                            ("DRY_DOCKING", "Dry Docking"),
                        ],
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "voyage_leg",
                    models.OneToOneField(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="marinanet.voyageleg",
                    ),
                ),
            ],
            options={
                "db_table": "voyage_leg_data",
            },
        ),
    ]
